// –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ç–µ–º, —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let topics = JSON.parse(localStorage.getItem('topics')) || [];
let users = JSON.parse(localStorage.getItem('users')) || [];

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const authPanel = document.querySelector('.auth-panel');
const content = document.getElementById('content');
const usernameInput = document.getElementById('username');
const passwordInput = document.getElementById('password');
const loginBtn = document.getElementById('login-btn');
const registerBtn = document.getElementById('register-btn');
const exportBtn = document.getElementById('export-btn');
const topicsList = document.getElementById('topics');
const adminPanel = document.getElementById('admin-panel'); // –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞
const topicTitleInput = document.getElementById('topic-title');
const topicContentInput = document.getElementById('topic-content');
const createTopicBtn = document.getElementById('create-topic-btn');
const topicModal = document.getElementById('topic-modal');
const modalTopicTitle = document.getElementById('modal-topic-title');
const modalTopicContent = document.getElementById('modal-topic-content');
const modalMessages = document.getElementById('modal-messages');
const newMessageInput = document.getElementById('new-message');
const fileInput = document.createElement('input'); // –ü–æ–ª–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
fileInput.type = 'file';
fileInput.accept = '.pdf, .jpg, .jpeg, .png';
const sendMessageBtn = document.getElementById('send-message-btn');
const clearTopicBtn = document.getElementById('clear-topic-btn'); // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–º—ã
const closeModal = document.querySelector('.close');
const usernameDisplay = document.getElementById('username-display');

// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–µ–º–∞ –∏ —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞
let currentUser = null;
let currentTopicId = null;
let isAdmin = false;

// –¶–≤–µ—Ç–∞ –¥–ª—è –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞)
const usernameColors = ['username-pink', 'username-green', 'username-yellow'];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
function getRandomColor() {
    return usernameColors[Math.floor(Math.random() * usernameColors.length)];
}

// –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–º—ã
topics = [];

// –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏ –Ω–æ–≤—ã–µ —Ç–µ–º—ã
topics.push({
    title: "–ß–∞—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
    content: "–°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.",
    messages: [
        { user: "–ê–¥–º–∏–Ω", text: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞.", color: "username-gold", files: [] },
        { user: "–°—Ç—É–¥–µ–Ω—Ç", text: "–ü—Ä–∏–≤–µ—Ç! –ö—Ç–æ-—Ç–æ —É–∂–µ —Å–¥–∞–ª —ç–∫–∑–∞–º–µ–Ω –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ?", color: "username-green", files: [] }
    ]
});

topics.push({
    title: "–û—Ç–≤–µ—Ç—ã",
    content: "–î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—é–¥–∞ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –¢–†, —Ñ–æ—Ç–∫–∏ –±–∏–ª–µ—Ç–æ–≤ –∏ –ø—Ä–æ—á–µ–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —ç–∫–∑–∞–º–µ–Ω–∞–º–∏.",
    messages: [
        { user: "–°—Ç—É–¥–µ–Ω—Ç", text: "–í–æ—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ –¢–† –ø–æ —Ñ–∏–∑–∏–∫–µ: [—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª].", color: "username-yellow", files: [] },
        { user: "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", text: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —ç–∫–∑–∞–º–µ–Ω–∞.", color: "username-pink", files: [] }
    ]
});

topics.push({
    title: "–†–∞–±–æ—Ç–∞",
    content: "–†–∞–∑–º–µ—â–∞–π—Ç–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø–æ—á—Ç—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.",
    messages: [
        { user: "–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å", text: "–ò—â–µ–º —Å—Ç–∞–∂—ë—Ä–∞ –≤ IT-–∫–æ–º–ø–∞–Ω–∏—é. –ü–∏—à–∏—Ç–µ –Ω–∞ email: hr@company.com.", color: "username-green", files: [] },
        { user: "–°—Ç—É–¥–µ–Ω—Ç", text: "–ï—Å—Ç—å –ª–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è junior-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤?", color: "username-yellow", files: [] }
    ]
});

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—ã –≤ localStorage
localStorage.setItem('topics', JSON.stringify(topics));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–º
function renderTopics() {
    topicsList.innerHTML = '';
    topics.forEach((topic, index) => {
        const li = document.createElement('li');
        li.textContent = topic.title;
        li.addEventListener('click', () => openTopic(index));
        topicsList.appendChild(li);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–µ–º—ã
function openTopic(id) {
    currentTopicId = id;
    const topic = topics[id];
    modalTopicTitle.textContent = topic.title;
    modalTopicContent.textContent = topic.content;
    renderMessages(topic.messages);
    topicModal.style.display = 'flex';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function renderMessages(messages) {
    modalMessages.innerHTML = '';
    messages.forEach(message => {
        const li = document.createElement('li');
        const crown = message.user === "ADMIN_RGRTU" ? "üéì" : ""; // –ó–Ω–∞—á–æ–∫ –∫–æ—Ä–æ–Ω—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
        li.innerHTML = `<span class="${message.color}">${message.user} ${crown}:</span> ${message.text}`;

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        if (message.files && message.files.length > 0) {
            message.files.forEach(file => {
                if (file.type.startsWith('image/')) {
                    li.innerHTML += `<br><img src="${file.url}" alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" style="max-width: 200px;">`;
                } else if (file.type === 'application/pdf') {
                    li.innerHTML += `<br><a href="${file.url}" target="_blank">–°–∫–∞—á–∞—Ç—å PDF</a>`;
                }
            });
        }

        modalMessages.appendChild(li);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ç–µ–º—ã
createTopicBtn.addEventListener('click', () => {
    const title = topicTitleInput.value.trim();
    const content = topicContentInput.value.trim();

    if (title && content) {
        topics.push({
            title,
            content,
            messages: []
        });
        localStorage.setItem('topics', JSON.stringify(topics));
        renderTopics();
        topicTitleInput.value = '';
        topicContentInput.value = '';
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
sendMessageBtn.addEventListener('click', () => {
    const message = newMessageInput.value.trim();
    const files = fileInput.files;

    if ((message || files.length > 0) && currentTopicId !== null && currentUser) {
        const userData = users.find(user => user.username === currentUser);
        const color = userData.color;

        const newMessage = {
            user: currentUser,
            text: message,
            color: color,
            files: []
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
        if (files.length > 0) {
            Array.from(files).forEach(file => {
                const fileURL = URL.createObjectURL(file);
                newMessage.files.push({
                    type: file.type,
                    url: fileURL
                });
            });
        }

        topics[currentTopicId].messages.push(newMessage);
        localStorage.setItem('topics', JSON.stringify(topics));
        renderMessages(topics[currentTopicId].messages);
        newMessageInput.value = '';
        fileInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–º—ã
clearTopicBtn.addEventListener('click', () => {
    if (currentTopicId !== null) {
        topics[currentTopicId].messages = [];
        localStorage.setItem('topics', JSON.stringify(topics));
        renderMessages(topics[currentTopicId].messages);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
registerBtn.addEventListener('click', () => {
    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();

    if (username && password) {
        const userExists = users.some(user => user.username === username);
        if (!userExists) {
            const color = getRandomColor();
            users.push({ username, password, color });
            localStorage.setItem('users', JSON.stringify(users));
            alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
        } else {
            alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
        }
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞
loginBtn.addEventListener('click', () => {
    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
    if (username === "ADMIN_RGRTU" && password === "sasatsasat123") {
        currentUser = username;
        isAdmin = true;
        authPanel.style.display = 'none';
        content.style.display = 'block';
        adminPanel.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞
        clearTopicBtn.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–º—ã
        usernameDisplay.textContent = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username} üéì`; // –ó–Ω–∞—á–æ–∫ –∫–æ—Ä–æ–Ω—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
        usernameDisplay.className = "username-gold"; // –ó–æ–ª–æ—Ç–æ–π —Ü–≤–µ—Ç –¥–ª—è –∞–¥–º–∏–Ω–∞
        return;
    }

    // –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const user = users.find(user => user.username === username && user.password === password);
    if (user) {
        currentUser = username;
        isAdmin = false;
        authPanel.style.display = 'none';
        content.style.display = 'block';
        adminPanel.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞
        clearTopicBtn.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–º—ã
        usernameDisplay.textContent = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username}`;
        usernameDisplay.className = user.color; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç
    } else {
        alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Excel
exportBtn.addEventListener('click', () => {
    const ws = XLSX.utils.json_to_sheet(users);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
    XLSX.writeFile(wb, 'users.xlsx');
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
closeModal.addEventListener('click', () => {
    topicModal.style.display = 'none';
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
renderTopics();

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
document.querySelector('.modal-content').insertBefore(fileInput, newMessageInput);